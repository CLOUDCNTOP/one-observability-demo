AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template deploys a VPC, with a public subnet. It deploys an an EC2
  instance for CloudWatch agent installation
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: observability-workshop
  KeyPair:
    Description: EC2 key pairs
    Type: 'AWS::EC2::KeyPair::KeyName'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.192.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: 10.192.10.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName} Public Subnet'
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName} Public Route'
  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: ingress-sg
      GroupDescription: Security group with for the instance
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 0.0.0.0/0
  Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: >-
        {{resolve:ssm:/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base}}
      SubnetId: !Ref PublicSubnet1
      KeyName: !Ref KeyPair
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}'
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
  PublicSubnet1:
    Description: A reference to the public subnet
    Value: !Ref PublicSubnet1
  InstanceSecurityGroup:
    Description: Security group
    Value: !Ref InstanceSecurityGroup
  Instance:
    Description: EC2 instance for agent installation
    Value: !Ref Instance
