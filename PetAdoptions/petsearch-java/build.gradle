plugins {
    id 'org.springframework.boot' version '2.3.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
    mavenCentral()
    jcenter()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
    set('testContainerVersion', '1.13.0')
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.cloud:spring-cloud-starter-aws'

    compile 'com.amazonaws:aws-java-sdk-core'
    compile 'com.amazonaws:aws-java-sdk-s3'
    compile 'com.amazonaws:aws-java-sdk-dynamodb'
    compile 'com.amazonaws:aws-java-sdk-ssm'
    compile 'com.amazonaws:aws-java-sdk-xray'
    compile 'com.amazonaws:aws-xray-recorder-sdk-core'
    compile 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk'
    compile 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk-instrumentor'

    compile 'io.opentelemetry:opentelemetry-sdk:0.8.0'
    compile 'io.opentelemetry.instrumentation:opentelemetry-otlp-exporter-starter:0.8.0'
    compile 'io.opentelemetry.instrumentation:opentelemetry-aws-sdk-2.2:0.8.0'

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile "org.testcontainers:localstack:${testContainerVersion}"
    testCompile "org.testcontainers:junit-jupiter:${testContainerVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.amazonaws:aws-xray-recorder-sdk-bom:2.4.0"
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.946'
    }
}

test {
    useJUnitPlatform()
}
