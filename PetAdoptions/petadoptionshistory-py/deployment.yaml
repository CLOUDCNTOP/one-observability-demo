---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: "{{PETSITE_SA_ROLE}}"
  name: pethistory-sa
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: pethistory-service
  namespace: default
spec:
  ports:
  - port: 8080
    nodePort: 30303
    targetPort: 8080
    protocol: TCP
  type: NodePort
  selector:
    app: pethistory
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-config
  namespace: default
data:
  # aws-otel-collector config
  otel-config.yaml: |
    extensions:
      health_check:

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          global:
            scrape_interval: 20s
            scrape_timeout: 10s
          scrape_configs:
            - job_name: "otel-collector"
              kubernetes_sd_configs:
                - role: pod
              static_configs:
                - targets: ["localhost:8080"]
              metrics_path: /petadoptionhistory/metrics
              relabel_configs:
                - source_labels: [ __meta_kubernetes_pod_name ]
                  action: replace
                  target_label: pod_name
                - source_labels: [ __meta_kubernetes_pod_container_name ]
                  action: replace
                  target_label: container_name

    processors:
      batch:

    exporters:
      logging:
        loglevel: debug
      awsxray:
      awsemf:
        namespace: "PetAdoptionsHistory"
        resource_to_telemetry_conversion:
          enabled: true
        dimension_rollup_option: NoDimensionRollup
        metric_declarations:
          - dimensions: [ [ pod_name, container_name ] ]
            metric_name_selectors:
              - "^transactions_get_count_total$"
              - "^transactions_history_count$"
              - "^process_.*"
            label_matchers:
              - label_names:
                  - container_name
                regex: ^pethistory$
          - dimensions: [ [ pod_name, container_name, generation ] ]
            metric_name_selectors:
              - "^python_gc_objects_.*"
            label_matchers:
              - label_names:
                  - container_name
                regex: ^pethistory$
          - dimensions: [ [ pod_name, container_name, endpoint, method, status ] ]
            metric_name_selectors:
              - "^flask_http_request_duration_seconds_created$"
            label_matchers:
              - label_names:
                  - container_name
                regex: ^pethistory$
          - dimensions: [ [ pod_name, container_name, method, status ] ]
            metric_name_selectors:
              - "^flask_http_request_total$"
              - "^flask_http_request_created$"
            label_matchers:
              - label_names:
                  - container_name
                regex: ^pethistory$
          - dimensions: [ [ pod_name, container_name, implementation, major, minor, patchlegel, version ] ]
            metric_name_selectors:
              - "^python_info$"
            label_matchers:
              - label_names:
                  - container_name
                regex: ^pethistory$
          - dimensions: [ [ pod_name, container_name, version ] ]
            metric_name_selectors:
              - "^flask_exporter_info$"
            label_matchers:
              - label_names:
                  - container_name
                regex: ^pethistory$

    service:
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [awsxray]
        metrics:
          receivers: [prometheus]
          exporters: [awsemf]

      extensions: [health_check]
      telemetry:
        logs:
          level: debug
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pethistory-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: pethistory
  replicas: 1
  template:
    metadata:
      labels:
        app: pethistory
    spec:
      serviceAccountName: pethistory-sa
      containers:
      - image: "{{ECR_IMAGE_URL}}"
        imagePullPolicy: Always
        name: pethistory
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: AWS_XRAY_DAEMON_ADDRESS
          value: xray-service.default:2000
        - name: AWS_REGION
          value: "{{AWS_REGION}}"
        - name: OTEL_OTLP_ENDPOINT
          value: "localhost:4317"
        - name: OTEL_RESOURCE
          value: ClusterName={{CLUSTER_NAME}}
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.namespace=AWSObservability,service.name=PetAdoptionsHistory"
        - name: S3_REGION
          value: "{{AWS_REGION}}"
        - name: OTEL_METRICS_EXPORTER
          value: "otlp"
      - name: aws-otel-collector
        image: amazon/aws-otel-collector:latest
        args: ["--config=/etc/otel-config/otel-config.yaml"]
        env:
        - name: AWS_REGION
          value: "{{AWS_REGION}}"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 256m
            memory: 512Mi
          requests:
            cpu: 32m
            memory: 24Mi
        volumeMounts:
        - name: otel-config
          mountPath: /etc/otel-config
      volumes:
      - name: otel-config
        configMap:
          name: otel-config
---
apiVersion: elbv2.k8s.aws/v1beta1
kind: TargetGroupBinding
metadata:
  name: pethistory-tgb
spec:
  serviceRef:
    name: pethistory-service
    port: 8080
  targetGroupARN: "{{TARGET_GROUP_ARN}}"
  targetType: ip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-prometheus-role
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-prometheus-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-prometheus-role
subjects:
  - kind: ServiceAccount
    name: pethistory-sa
    namespace: default
